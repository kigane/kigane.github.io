(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{523:function(s,a,t){"use strict";t.r(a);var n=t(1),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"基本命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本命令"}},[s._v("#")]),s._v(" 基本命令")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker pull image")]),s._v(" 从Docker仓库中拉取镜像。")]),s._v(" "),t("li",[t("code",[s._v("docker run image")]),s._v(" 创建一个新的容器, 启动镜像。如果镜像不存在，则会尝试先从Docker仓库中拉取。\n"),t("ul",[t("li",[s._v("-d 后台运行")]),s._v(" "),t("li",[s._v("-p 81:80 将主机的81端口和Docker Container的80端口绑定")]),s._v(" "),t("li",[s._v("--name custonName")])])]),s._v(" "),t("li",[t("code",[s._v("docker start <the-container-id>")]),s._v(" 启动容器")]),s._v(" "),t("li",[t("code",[s._v("docker stop <the-container-id>")]),s._v(" 关闭容器")]),s._v(" "),t("li",[t("code",[s._v("docker ps")]),s._v(" 显示当前运行的容器。\n"),t("ul",[t("li",[s._v("-a 所有容器，包括已停止的。")])])]),s._v(" "),t("li",[t("code",[s._v("docker log name")]),s._v(" 显示日志")]),s._v(" "),t("li",[t("code",[s._v("docker exec -it name|<the-container-id> /bin/bash")]),s._v(" 打开容器的交互式终端。可用于Debug环境。\n"),t("ul",[t("li",[s._v("-it 打开交互式终端")])])])]),s._v(" "),t("h2",{attrs:{id:"创建镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建镜像"}},[s._v("#")]),s._v(" 创建镜像")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker build -t getting-started .")]),s._v(" 创建一个镜像\n"),t("ul",[t("li",[s._v("-t 镜像名")]),s._v(" "),t("li",[s._v(". dockerfile所在文件夹")])])]),s._v(" "),t("li",[t("code",[s._v("docker rm <the-container-id>")]),s._v(" 删除镜像")])]),s._v(" "),t("h2",{attrs:{id:"上传镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#上传镜像"}},[s._v("#")]),s._v(" 上传镜像")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker login -u YOUR-USER-NAME")]),s._v(" 登录")]),s._v(" "),t("li",[t("code",[s._v("docker tag image YOUR-USER-NAME/image_new_name")]),s._v(" 给镜像标tag。")]),s._v(" "),t("li",[t("code",[s._v("docker push YOUR-USER-NAME/image_new_name")]),s._v(" 上传镜像")])]),s._v(" "),t("h2",{attrs:{id:"数据持久化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据持久化"}},[s._v("#")]),s._v(" 数据持久化")]),s._v(" "),t("p",[s._v("容器的文件系统：每个容器有独立的文件系统，在一个容器中创建，更新，删除文件不会影响到其他容器。")]),s._v(" "),t("p",[s._v("Container Volumes：容器的文件系统都是独立的，在容器被删除时，其文件系统中的文件也不会保留。此外，容器也不能共享文件。Volumes提供了将容器中的文件路径和主机连接起来的能力。Volume可以看作一个存数据的空间，其在主机中的具体位置由Docker管理，用户只要记住Volume的名字即可使用。")]),s._v(" "),t("p",[t("code",[s._v("docker volume create todo-db")]),s._v(" 创建Volume\n"),t("code",[s._v("docker run -dp 3000:3000 -v todo-db:/etc/todos getting-started")]),s._v(" 在创建容器时用-v选项指定Volume在容器中挂载的位置")]),s._v(" "),t("p",[s._v("Volumes有两种主要类型，一种named volume主要用于存储数据，不需要关注数据具体存在哪里。一种bind mount，用于热更新，增加数据。")]),s._v(" "),t("p",[t("code",[s._v('docker run -dp 3000:3000 -w /app -v "$(pwd):/app" node:12-alpine sh -c "yarn install && yarn run dev')]),s._v('\n-w /app 指定app在容器中的工作目录\n-v "$(pwd):/app" 前面是主机目录，后面是容器目录。将主机目录挂载到容器目录上。注意，主机目录应该这样写"/c/Docker/app"，即在c盘的Docker/app文件夹。\nsh -c "yarn install && yarn run dev 安装依赖并启动nodemon监视源码，如有改动，立即更新。')]),s._v(" "),t("h2",{attrs:{id:"多容器应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多容器应用"}},[s._v("#")]),s._v(" 多容器应用")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("In general, each container should do one thing and do it well.")])]),s._v(" "),t("li",[t("p",[s._v("If two containers are on the same network, they can talk to each other. If they aren't, they can't.")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("docker network create todo-app")]),s._v(" 创建网络")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("docker run -d --network todo-app --network-alias mysql -v todo-mysql-data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=secret -e MYSQL_DATABASE=todos mysql:5.7")])]),s._v(" "),t("ul",[t("li",[s._v("--network-alias 定义容器在网络中的别名，可以当做IP地址使用。")]),s._v(" "),t("li",[s._v("-v todo-mysql-data:/var/lib/mysql 我们没有手动创建todo-mysql-data Volume，这里docker知道你要用named volume，会自动帮你创建。")]),s._v(" "),t("li",[s._v("-e 设置环境变量")])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("docker exec -it <mysql-container-id> mysql -p")]),s._v(" 进入数据库，输入"),t("code",[s._v("SHOW DATABASES;")]),s._v("应该能看到todos数据库。")])]),s._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/nicolaka/netshoot",target:"_blank",rel:"noopener noreferrer"}},[s._v("nicolaka/netshoot"),t("OutboundLink")],1),s._v(" container：包含很多处理网络相关事务的工具。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("docker run -it --network todo-app nicolaka/netshoot")]),s._v(" 启动工具。在工具命令行中输入dig mysql，徐结果如下。其中ANSWER SECTION中表示mysql对应的IP为172.23.0.2。mysql不是有效的主机名，而是我们用--network-alias定义的别名。在容器网络中可以直接用这个别名代替IP地址。")])])]),s._v(" "),t("div",{staticClass:"language-md line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-md"}},[t("code",[s._v("; <<>> DiG 9.14.1 <<>> mysql\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 32162\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0\n\n;; QUESTION SECTION:\n;mysql.             IN  A\n\n;; ANSWER SECTION:\nmysql.          600 IN  A   172.23.0.2\n\n;; Query time: 0 msec\n;; SERVER: 127.0.0.11#53(127.0.0.11)\n;; WHEN: Tue Oct 01 23:47:24 UTC 2019\n;; MSG SIZE  rcvd: 44\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("ul",[t("li",[t("p",[t("code",[s._v('docker run -dp 3000:3000 -w /app -v "$(pwd):/app" --network todo-app -e MYSQL_HOST=mysql -e MYSQL_USER=root -e MYSQL_PASSWORD=secret -e MYSQL_DB=todos node:12-alpine sh -c "yarn install && yarn run dev"')]),s._v(" 启动app并设置环境变量以连接到mysql。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("docker exec -it <mysql-container-id> mysql -p todos")]),s._v(" 进入todos数据库，执行select * from todo_items查看添加的todo条目。")])])]),s._v(" "),t("h2",{attrs:{id:"使用docker-compose简化多容器应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用docker-compose简化多容器应用"}},[s._v("#")]),s._v(" 使用Docker Compose简化多容器应用")]),s._v(" "),t("p",[s._v("上一节创建一个多容器app步骤较繁琐。使用Docker Compose可以简化。(如果是在Linux上首先需要安装Docker Compose)")]),s._v(" "),t("ol",[t("li",[s._v("在项目根目录中新建docker-compose.yml文件")]),s._v(" "),t("li",[s._v("使用配置文件定义服务，以实现和上一节同样的效果")]),s._v(" "),t("li",[s._v("运行："),t("code",[s._v("docker-compose up -d")])]),s._v(" "),t("li",[s._v("查看日志: "),t("code",[s._v("docker-compose logs -f")])]),s._v(" "),t("li",[s._v("关闭: "),t("code",[s._v("docker-compose up")])])]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3.8"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# schema version")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 服务名会自动作为--network-alias")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("12"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("alpine "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 要运行的镜像")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" sh "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v('c "yarn install '),t("span",{pre:!0,attrs:{class:"token important"}},[s._v("&&")]),s._v(' yarn run dev" '),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器创建后要执行的命令")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 端口映射 -p")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 3000"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("working_dir")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /app "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定容器工作目录 -w")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# volume映射 -v")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/app\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 环境变量 -e")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("MYSQL_HOST")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mysql\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("MYSQL_USER")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" root\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("MYSQL_PASSWORD")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" secret\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("MYSQL_DB")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" todos\n  \n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("mysql")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mysql:5.7'")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" todo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("mysql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/lib/mysql\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" MYSQL_ROOT_PASSWORD=secret\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" MYSQL_DATABASE=todos\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建 named volume")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("todo-mysql-data")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br")])]),t("p",[s._v("在Docker Desktop中查看，这个app显示为app(项目所在文件夹的名字)。app下的容器名为"),t("code",[s._v("<project-name>_<service-name>_<replica-number>")]),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"创建镜像的最佳实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建镜像的最佳实践"}},[s._v("#")]),s._v(" 创建镜像的最佳实践")]),s._v(" "),t("h3",{attrs:{id:"layer-caching"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#layer-caching"}},[s._v("#")]),s._v(" layer caching")]),s._v(" "),t("ul",[t("li",[s._v("dockerfile的每一行为一层(layer)，一但某层需要重新执行，则其下所有层都会重新执行。")]),s._v(" "),t("li",[s._v("dockerfile缓存机制")])]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[s._v("FROM node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("12"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("alpine\nWORKDIR /app\nCOPY . .\nRUN yarn install "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("production\nCMD "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"src/index.js"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("每次重新创建镜像的时候，都会从头开始构建：新建app目录，将原镜像的文件复制过来，执行yarn install安装依赖，最后执行node src/index.js运行服务。问题在于：parent镜像执行过yarn install后，工作目录中会多一个npm_modules的文件夹，里面是yarn安装的各种依赖，通常比较大，而且内容主要是数量极多的小文件。复制操作极为耗时。因此，最佳实践如下")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[s._v("FROM node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("12"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("alpine\nWORKDIR /app\nCOPY package.json yarn.lock ./\nRUN yarn install "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("production\nCOPY . .\nCMD "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"src/index.js"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("修改dockfile后，再在工作目录新建一个文件"),t("code",[s._v(".dockerignore")]),s._v("，内容为"),t("code",[s._v("npm_modules")]),s._v("，意思是不将npm_modules文件夹放到构建上下文(build context)中。此时重新创建镜像时：先复制"),t("code",[s._v("package.json")]),s._v("(要安装的依赖)和"),t("code",[s._v("yarn.lock")]),s._v("(已安装的依赖)两个文件，再执行yarn install，此时如果前两个文件内容未变，yarn不会重新安装依赖。接着执行COPY将其他文件复制过来，"),t("code",[s._v("npm_modules")]),s._v("直接使用缓存。")])])}),[],!1,null,null,null);a.default=e.exports}}]);