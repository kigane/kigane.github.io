(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{569:function(t,a,s){"use strict";s.r(a);var e=s(1),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备"}},[t._v("#")]),t._v(" 准备")]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("pip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" beautifulsoup4\npip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" lxml\npip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" requests\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("ul",[s("li",[t._v("Beautiful Soup是一个可以从HTML或XML文件中提取数据的Python库.它能够通过你喜欢的转换器实现惯用的文档导航,"),s("strong",[t._v("查找")]),t._v(","),s("strong",[t._v("修改")]),t._v("文档的方式.")]),t._v(" "),s("li",[t._v("lxml是HTML或XML文件的解析器.速度很快.通常比python内置的解析器html.parser更好用.")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://docs.python-requests.org/en/latest/user/quickstart/#response-content",target:"_blank",rel:"noopener noreferrer"}},[t._v("requests"),s("OutboundLink")],1),t._v("用于获取网页")])]),t._v(" "),s("h2",{attrs:{id:"beautiful-soup介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beautiful-soup介绍"}},[t._v("#")]),t._v(" Beautiful Soup介绍")]),t._v(" "),s("p",[t._v("Beautiful Soup将复杂HTML文档转换成一个复杂的树形结构,每个节点都是Python对象,所有对象可以归纳为4种:")]),t._v(" "),s("ul",[s("li",[t._v("BeautifulSoup: 表示的是一个文档的全部内容.大部分时候,可以把它当作 Tag 对象.")]),t._v(" "),s("li",[t._v("Tag:与XML或HTML原生文档中的tag相同.即对"),s("code",[t._v("<tagName attr=val>Tag Content</tagName>")]),t._v("的包装.\n"),s("ul",[s("li",[t._v("name：tag.name == 'tagName'")]),t._v(" "),s("li",[t._v("attributes: tag.attrs得到属性字典。也可以直接用tag对象取。"),s("code",[t._v("tag[attr] == tag.attrs[attr]")]),t._v("。通常属性返回值为字符串，但一些html规定的多值属性如果有多个值，则会返回字符串列表。")])])]),t._v(" "),s("li",[t._v("NavigableString: 通过tag.string获取.包装tag中的字符串.即tag中的"),s("code",[t._v("Tag Content")]),t._v(".")]),t._v(" "),s("li",[t._v("Comment: 是一个特殊类型的 NavigableString 对象.在tag中以"),s("code",[t._v("\x3c!--Comment--\x3e")]),t._v("或"),s("code",[t._v("<![CDATA[Comment]]>")]),t._v("形式出现。")])]),t._v(" "),s("h3",{attrs:{id:"遍历文档树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#遍历文档树"}},[t._v("#")]),t._v(" 遍历文档树")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("访问子节点")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("tag.tagName")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("查找并返回tag节点下的第一个tagName标签子节点。点操作符实际上相当于调用了"),s("code",[t._v("tag.find('tagName')")]),t._v("。具体见Tag类的"),s("code",[t._v("__getattr___()")]),t._v("方法")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".contents & .children")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("将tag的子节点以NavigableString列表的方式输出. contents返回列表, children返回生成器。仅包含tag的直接子节点.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".descendants")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回的生成器可以对所有tag的子孙节点进行递归循环")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".string")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("如果tag只有一个 NavigableString 类型子节点,那么可以使用 .string 得到.如果tag包含了多个子节点,tag就无法确定 .string 方法应该调用哪个子节点的内容, .string 的输出结果是 None.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".strings & .stripped_strings")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("如果tag中包含多个字符串,可以使用 .strings 来循环获取。.stripped_strings是去掉多余的空格与空行的版本。")])])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("访问父节点和兄弟节点")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".parent")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获取某个元素的父节点。注意：NavigableString的父节点是其所属的tag")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".parents")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("递归得到元素的所有父辈节点。"),s("code",[t._v("[..., 'html', '[document]', None]")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".next_sibling & .previous_sibling")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("查询一个兄弟节点")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".next_siblings & .previous_siblings")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("查询兄弟节点列表")])])])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("对于一个如下所示的复杂标签")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://example.com/elsie"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("link1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Elsie"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("or\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://example.com/lacie"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("link2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Lacie"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" and\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://example.com/tillie"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("link3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Tillie"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(";\nlived at the bottom of a well.\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("p的子节点有哪些呢？"),s("br"),t._v(" "),s("code",[t._v('[\'\\n\', <a href="http://example.com/elsie" id="link1">Elsie</a>, \'or\\n\', <a href="http://example.com/lacie" id="link2">Lacie</a>, \' and\\n\', <a href="http://example.com/tillie" id="link3">Tillie</a>, \';\\nlived at the bottom of a well.\\n\']')]),s("br"),t._v("\n类型分别为"),s("br"),t._v(" "),s("code",[t._v("[NavigableString, Tag, NavigableString, Tag, NavigableString, Tag, NavigableString]")])]),t._v(" "),s("p",[t._v("记住：文档节点类型有四种,BeautifulSoup,Tag,NavigableString,Comment.")])]),t._v(" "),s("h3",{attrs:{id:"搜索文档树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搜索文档树"}},[t._v("#")]),t._v(" 搜索文档树")]),t._v(" "),s("p",[t._v("主要方法为 find() 和 find_all()。所有"),s("code",[t._v("find_*")]),t._v("方法参数都一样。")]),t._v(" "),s("p",[s("code",[t._v("find(name=None, attrs={}, recursive=True, text=None, **kwargs)")]),t._v(": 返回在子节点中第一个符合条件的节点。")]),t._v(" "),s("ul",[s("li",[t._v("name: 关于tag的过滤器")]),t._v(" "),s("li",[t._v("attrs: 属性过滤器")]),t._v(" "),s("li",[t._v("recursive: 默认递归搜索。设为False后只搜索一层。")]),t._v(" "),s("li",[t._v("limit: 找到limit个匹配的元素后就结束。")]),t._v(" "),s("li",[t._v("text=xxx: 通过 string 参数可以搜搜文档中的"),s("strong",[t._v("字符串内容")]),t._v(".与 name 参数的可选值一样, string 参数接受 字符串 , 正则表达式 , 列表, True")]),t._v(" "),s("li",[t._v("kwargs: 设置属性过滤器。和attrs作用相同，会自动转为字典，写法更简单。\n"),s("ul",[s("li",[t._v("class_=xxx: 按class属性过滤")])])])]),t._v(" "),s("p",[t._v("过滤器")]),t._v(" "),s("ul",[s("li",[t._v("字符串: 查找与字符串完整匹配的标签名")]),t._v(" "),s("li",[t._v("正则表达式: 通过正则表达式的 search() 来匹配标签名")]),t._v(" "),s("li",[t._v("列表: 将与列表中任一元素匹配的内容返回")]),t._v(" "),s("li",[t._v("True: 可以匹配任何值")]),t._v(" "),s("li",[t._v("函数: 如果没有合适过滤器,那么还可以定义一个函数,函数只接受一个参数即节点,如果这个方法返回 True 表示当前元素匹配并且被找到,如果不是则返回 False")])]),t._v(" "),s("h3",{attrs:{id:"通过css选择器搜索"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过css选择器搜索"}},[t._v("#")]),t._v(" 通过CSS选择器搜索")]),t._v(" "),s("p",[t._v("Beautiful Soup支持大部分的"),s("a",{attrs:{href:"http://www.w3.org/TR/CSS2/selector.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS选择器"),s("OutboundLink")],1),t._v(", 在 Tag 或 BeautifulSoup 对象的 .select() 方法中传入字符串参数, 即可使用CSS选择器的语法找到tag.")]),t._v(" "),s("h3",{attrs:{id:"解析部分文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析部分文档"}},[t._v("#")]),t._v(" 解析部分文档")]),t._v(" "),s("p",[t._v("SoupStrainer 类可以定义文档的某段内容,这样搜索文档时就不必先解析整篇文档,只会解析在 SoupStrainer 中定义过的文档. 创建一个 SoupStrainer 对象并作为 parse_only 参数给 BeautifulSoup 的构造方法即可.")]),t._v(" "),s("p",[t._v("SoupStrainer 类接受与典型搜索方法相同的参数：name , attrs , recursive , text , **kwargs 。")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" bs4 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" SoupStrainer\nonly_a_tags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" SoupStrainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# soup现在只包含a标签")]),t._v("\nsoup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" BeautifulSoup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html_doc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"html.parser"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parse_only"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("only_a_tags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h2",{attrs:{id:"爬取数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#爬取数据"}},[t._v("#")]),t._v(" 爬取数据")]),t._v(" "),s("h2",{attrs:{id:"解析数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析数据"}},[t._v("#")]),t._v(" 解析数据")]),t._v(" "),s("h2",{attrs:{id:"保存数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保存数据"}},[t._v("#")]),t._v(" 保存数据")])])}),[],!1,null,null,null);a.default=n.exports}}]);