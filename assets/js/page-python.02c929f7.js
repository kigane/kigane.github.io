(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{578:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"import"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#import"}},[t._v("#")]),t._v(" import")]),t._v(" "),s("h3",{attrs:{id:"module"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#module"}},[t._v("#")]),t._v(" module")]),t._v(" "),s("ul",[s("li",[t._v("dir(): 无参数，查看全局命名空间的变量")]),t._v(" "),s("li",[t._v("dir(module): 查看指定模块的变量")]),t._v(" "),s("li",[t._v("一个.py文件可看作一个模块\n"),s("ul",[s("li",[t._v("import module (as alias) 引入module，可使用module命名空间及其内的变量")]),t._v(" "),s("li",[t._v("from module import var 将var从module中导入全局命名空间")])])])]),t._v(" "),s("h3",{attrs:{id:"package"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#package"}},[t._v("#")]),t._v(" package")]),t._v(" "),s("ul",[s("li",[t._v("一个目录，包含目录和子模块。")]),t._v(" "),s("li",[t._v("创建一个package需要在目录下创建一个"),s("code",[t._v("__init__.py")])]),t._v(" "),s("li",[t._v("需要在"),s("code",[t._v("__init__.py")]),t._v("中引入子模块，否则import package时空有命名空间，而无内容")])]),t._v(" "),s("h3",{attrs:{id:"模块查找顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块查找顺序"}},[t._v("#")]),t._v(" 模块查找顺序")]),t._v(" "),s("ul",[s("li",[t._v("当前工作目录(cwd)")]),t._v(" "),s("li",[t._v("python标准库, PYTHONPATH环境变量指定位置")]),t._v(" "),s("li",[t._v("sys.path")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("通过os.environ字典可以查看当前环境变量")])]),t._v(" "),s("h3",{attrs:{id:"只导入一次"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#只导入一次"}},[t._v("#")]),t._v(" 只导入一次")]),t._v(" "),s("p",[t._v("导入模块时，如果模块中有可执行代码，则会执行。("),s("code",[t._v("if __name__ == '__main__'")]),t._v("就是用于防止意外执行不希望执行的代码)。"),s("br"),t._v("\n重复导入相同模块，什么也不会发生。")]),t._v(" "),s("h2",{attrs:{id:"解包-自动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解包-自动"}},[t._v("#")]),t._v(" 解包(自动)")]),t._v(" "),s("ul",[s("li",[t._v("等号右边的序列可以直接解包为单个元素，只要在左边分配同样数量的变量。")]),t._v(" "),s("li",[t._v("数量必须相同，否则会报错")]),t._v(" "),s("li",[t._v("可以部分解包，即在等号左边某个变量前加"),s("code",[t._v("*")]),t._v("号，则其会接受所有为未分配的值，并形成一个数组。(序列元素数量必须多于分配的变量数)。例如 "),s("code",[t._v("a, *b, c = [1, 2, 3, 4, 5]")]),t._v("，则有"),s("code",[t._v("b=[2,3,4]")])])]),t._v(" "),s("h2",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("h3",{attrs:{id:"参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("def add(*args)")]),t._v(": 这里"),s("code",[t._v("*")]),t._v("作用是将所有剩下的未解析参数打包到一个元组中，赋给args。调用时可以用"),s("code",[t._v("*args")]),t._v("的到解包后的值。")]),t._v(" "),s("li",[s("code",[t._v("def init(**kwargs)")]),t._v(": 这里"),s("code",[t._v("**")]),t._v("作用是将所有剩下未解析的关键字参数打包成字典，赋给kwargs。")]),t._v(" "),s("li",[s("code",[t._v("def say(a, b, *, key=val...)")]),t._v(": 这里"),s("code",[t._v("*")]),t._v("是标识符，左边是位置参数，右边是关键字参数。")]),t._v(" "),s("li",[t._v("参数类型的声明顺序\n"),s("ul",[s("li",[t._v("必须参数")]),t._v(" "),s("li",[t._v("可选参数(提供默认值的参数)")]),t._v(" "),s("li",[s("code",[t._v("*args")])]),t._v(" "),s("li",[s("code",[t._v("**kwargs")])])])])]),t._v(" "),s("h3",{attrs:{id:"函数注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数注解"}},[t._v("#")]),t._v(" 函数注解")]),t._v(" "),s("ul",[s("li",[t._v("python中对参数类型(参数后的冒号部分)和返回值类型(函数括号后，行尾冒号前的"),s("code",[t._v("->xx")]),t._v("部分)的描述方法")]),t._v(" "),s("li",[s("code",[t._v("def prepend_rows(row:list, prefix:str) -> list:")])]),t._v(" "),s("li",[t._v("这些部分属于注解而非表达式，所以内容是无限制的。")])]),t._v(" "),s("h3",{attrs:{id:"lambda"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lambda"}},[t._v("#")]),t._v(" lambda")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("f = lambda x: x*x")])]),t._v(" "),s("li",[t._v("语法: "),s("code",[t._v("lambda params:body")]),t._v(", "),s("code",[t._v("lambda: body")])]),t._v(" "),s("li",[t._v("body必须是返回一个值的单个表达式")])]),t._v(" "),s("h2",{attrs:{id:"类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类"}},[t._v("#")]),t._v(" 类")]),t._v(" "),s("h3",{attrs:{id:"基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[t._v("#")]),t._v(" 基础")]),t._v(" "),s("ul",[s("li",[t._v("python类声明的主体是一个代码块，可以包含任何有效的python代码")]),t._v(" "),s("li",[t._v("在类声明中声明的变量会成为类对象的一个属性(即，类会创建一个新的命名空间记录这些变量)")]),t._v(" "),s("li",[t._v("super(Class, instance, ...) 使用instance的MRO，从Class位置开始向上找。")])]),t._v(" "),s("h3",{attrs:{id:"动态加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态加载"}},[t._v("#")]),t._v(" 动态加载")]),t._v(" "),s("ul",[s("li",[t._v("python所有的类都是type()的子类")]),t._v(" "),s("li",[t._v("type()用于实例化类的三部分信息:\n"),s("ul",[s("li",[t._v("类名称")]),t._v(" "),s("li",[t._v("基类")]),t._v(" "),s("li",[t._v("命名空间字典，在执行类的主体时被填充")])])]),t._v(" "),s("li",[t._v("type()称为元类")])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    spam "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eggs'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等价于")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第一个A是为了创建类， 第二个A是用于将类名绑定到命名空间，两者可以不同(实际用时也确实是不同的)")]),t._v("\nA "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'spam'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eggs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h4",{attrs:{id:"自定义元类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义元类"}},[t._v("#")]),t._v(" 自定义元类")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过继承type自定义元类")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleMeta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bases"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attrs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SimpleMeta"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__init__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bases"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attrs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用元类，效果是：python会自动将类定义传递给元类进行处理")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Example")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("metaclass"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SimpleMeta"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 效果和标准类型一样")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h3",{attrs:{id:"成员变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#成员变量"}},[t._v("#")]),t._v(" 成员变量")]),t._v(" "),s("ul",[s("li",[t._v("getattr() 用名称检索成员变量 访问类中不存在的成员变量时会触发"),s("code",[t._v("__getattr__")]),t._v("(d['attr'])")]),t._v(" "),s("li",[t._v("setattr() 用名称设置成员变量 设置类成员时触发"),s("code",[t._v("__setattr__")]),t._v("(d.attr = 'attr')")]),t._v(" "),s("li",[t._v("delattr() 用名称删除成员变量 删除类成员时触发"),s("code",[t._v("__delattr__")]),t._v("(del d.attr)")]),t._v(" "),s("li",[s("code",[t._v("__str__")]),t._v(" toString方法")]),t._v(" "),s("li",[s("code",[t._v("__repr__")]),t._v(" 在解释器中单独引用对象时触发")])]),t._v(" "),s("h2",{attrs:{id:"打包到pip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打包到pip"}},[t._v("#")]),t._v(" 打包到pip")]),t._v(" "),s("ul",[s("li",[t._v("新建文件夹")]),t._v(" "),s("li",[t._v("将package放进去(包含__init__.py)")]),t._v(" "),s("li",[t._v("在根目录新建setup.py")]),t._v(" "),s("li",[t._v("在根目录执行\n"),s("ul",[s("li",[t._v("python setup.py bdist_wheel 打包成wheel")]),t._v(" "),s("li",[t._v("python setup.py sdist 打包成tar")])])]),t._v(" "),s("li",[t._v("在打包好的文件目录下pip install 打包好的文件名")]),t._v(" "),s("li",[t._v("pip uninstall setup.name 即可卸载")])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" setuptools "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" setup\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" setuptools "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" find_packages\n\nsetup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'MySheet'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0.1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      author"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hwk'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      author_email"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc@fg.com'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      url"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://hello.com'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      packages"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("find_packages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      zip_safe"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h2",{attrs:{id:"anaconda"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#anaconda"}},[t._v("#")]),t._v(" anaconda")]),t._v(" "),s("h3",{attrs:{id:"常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),s("ul",[s("li",[t._v("conda list: 查看安装了哪些包。")]),t._v(" "),s("li",[t._v("conda env list: 查看当前存在哪些虚拟环境")]),t._v(" "),s("li",[t._v("conda create -n your_env_name python=X.X: 创建python版本为X.X、名字为your_env_name的虚拟环境。your_env_name文件可以在Anaconda安装目录envs文件夹下找到。")]),t._v(" "),s("li",[t._v("activate your_env_name: Windows下激活虚拟环境")]),t._v(" "),s("li",[t._v("deactivate 退出")]),t._v(" "),s("li",[t._v("Linux下，激活，退出都在开头加一个source")]),t._v(" "),s("li",[t._v("conda remove -n your_env_name --all: 移除虚拟环境")]),t._v(" "),s("li",[t._v("conda install package_name: 在当前环境中安装包")]),t._v(" "),s("li",[t._v("conda install -n your_env_name package_name: 在指定环境中安装包")]),t._v(" "),s("li",[t._v("update, remove语法和install相同")]),t._v(" "),s("li",[t._v("conda search pname: 模糊搜索package")]),t._v(" "),s("li",[t._v("conda search --full-name pname: 全名查找")]),t._v(" "),s("li",[t._v("conda env export > environment.yml: 导出环境配置")]),t._v(" "),s("li",[t._v("conda env create -f environment.yml: 导入环境配置")])]),t._v(" "),s("h2",{attrs:{id:"tqdm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tqdm"}},[t._v("#")]),t._v(" tqdm")]),t._v(" "),s("p",[t._v("用在被遍历的可迭代对象上，自动产生进度条。")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tqdm "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" tqdm\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tqdm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("notebook "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" tqdm_notebook\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" time\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" tqdm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" desc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Process Bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" postfix"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Postfix loss=xx"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);