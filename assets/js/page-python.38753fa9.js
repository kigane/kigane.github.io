(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{518:function(t,a,e){"use strict";e.r(a);var r=e(1),l=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"import"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#import"}},[t._v("#")]),t._v(" import")]),t._v(" "),e("h3",{attrs:{id:"module"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#module"}},[t._v("#")]),t._v(" module")]),t._v(" "),e("ul",[e("li",[t._v("dir(): 无参数，查看全局命名空间的变量")]),t._v(" "),e("li",[t._v("dir(module): 查看指定模块的变量")]),t._v(" "),e("li",[t._v("一个.py文件可看作一个模块\n"),e("ul",[e("li",[t._v("import module (as alias) 引入module，可使用module命名空间及其内的变量")]),t._v(" "),e("li",[t._v("from module import var 将var从module中导入全局命名空间")])])])]),t._v(" "),e("h3",{attrs:{id:"package"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#package"}},[t._v("#")]),t._v(" package")]),t._v(" "),e("ul",[e("li",[t._v("一个目录，包含目录和子模块。")]),t._v(" "),e("li",[t._v("创建一个package需要在目录下创建一个"),e("code",[t._v("__init__.py")])]),t._v(" "),e("li",[t._v("需要在"),e("code",[t._v("__init__.py")]),t._v("中引入子模块，否则import package时空有命名空间，而无内容")])])])}),[],!1,null,null,null);a.default=l.exports}}]);