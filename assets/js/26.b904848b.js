(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{382:function(s,a,t){"use strict";t.r(a);var n=t(44),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"pa1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pa1"}},[s._v("#")]),s._v(" PA1")]),s._v(" "),t("h3",{attrs:{id:"nemu"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nemu"}},[s._v("#")]),s._v(" NEMU")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("nemu\n├── include                    # 存放全局使用的头文件\n│   ├── common"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("h               # 公用的头文件\n│   ├── cpu\n│   │   ├── decode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("h           # 译码相关\n│   │   └── exec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("h             # 执行相关\n│   ├── debug"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("h                # 一些方便调试用的宏\n│   ├── device                 # 设备相关\n│   ├── isa                    # "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ISA")]),s._v("相关\n│   ├── isa"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("h                  # "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ISA")]),s._v("相关\n│   ├── macro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("h                # 一些方便的宏定义\n│   ├── memory                 # 访问内存相关\n│   ├── monitor\n│   │   ├── log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("h              # 日志文件相关\n│   │   └── monitor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("h\n│   └── rtl\n│       ├── pesudo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("h           # "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RTL")]),s._v("伪指令\n│       └── rtl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("h              # "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RTL")]),s._v("指令相关定义\n├── Makefile                   # 指示"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NEMU")]),s._v("的编译和链接\n├── Makefile"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("git               # git版本控制相关\n├── runall"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sh                  # 一键测试脚本\n└── src                        # 源文件\n    ├── device                 # 设备相关\n    ├── engine\n    │   └── interpreter        # 解释器的实现\n    ├── isa                    # "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ISA")]),s._v("相关的实现\n    │   ├── mips32\n    │   ├── riscv32\n    │   ├── riscv64\n    │   └── x86\n    ├── main"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c                 # 你知道的"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n    ├── memory\n    │   └── paddr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c            # 物理内存访问\n    └── monitor\n        ├── cpu"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("exec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c         # 指令执行的主循环\n        ├── debug              # 简易调试器相关\n        │   ├── expr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c         # 表达式求值的实现\n        │   ├── log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c          # 日志文件相关\n        │   ├── ui"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c           # 用户界面相关\n        │   └── watchpoint"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c   # 监视点的实现\n        └── monitor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br")])]),t("ul",[t("li",[s._v("make ISA=$ISA run")]),s._v(" "),t("li",[s._v("在cmd_c()函数中, 调用cpu_exec()的时候传入了参数-1，但参数类型是uint64_t,因此实际的值为"),t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",[t("semantics",[t("mrow",[t("msup",[t("mn",[s._v("2")]),t("mrow",[t("mn",[s._v("6")]),t("mn",[s._v("4")])],1)],1),t("mo",[s._v("−")]),t("mn",[s._v("1")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("2^{64}-1")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"strut",staticStyle:{height:"0.8141079999999999em"}}),t("span",{staticClass:"strut bottom",staticStyle:{height:"0.897438em","vertical-align":"-0.08333em"}}),t("span",{staticClass:"base textstyle uncramped"},[t("span",{staticClass:"mord"},[t("span",{staticClass:"mord mathrm"},[s._v("2")]),t("span",{staticClass:"vlist"},[t("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[t("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[t("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),t("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[t("span",{staticClass:"mord scriptstyle uncramped"},[t("span",{staticClass:"mord mathrm"},[s._v("6")]),t("span",{staticClass:"mord mathrm"},[s._v("4")])])])]),t("span",{staticClass:"baseline-fix"},[t("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[t("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),s._v("​")])])]),t("span",{staticClass:"mbin"},[s._v("−")]),t("span",{staticClass:"mord mathrm"},[s._v("1")])])])]),s._v("，即0xffffffffffffffff。")]),s._v(" "),t("li",[s._v("三个对调试有用的宏(在nemu/include/debug.h中定义)\n"),t("ul",[t("li",[s._v("Log()是printf()的升级版, 专门用来输出调试信息, 同时还会输出使用Log()所在的源文件, 行号和函数. 当输出的调试信息过多的时候, 可以很方便地定位到代码中的相关位置")]),s._v(" "),t("li",[s._v("Assert()是assert()的升级版, 当测试条件为假时, 在assertion fail之前可以输出一些信息")]),s._v(" "),t("li",[s._v("panic()用于输出信息并结束程序, 相当于无条件的assertion fail")])])]),s._v(" "),t("li",[s._v("内存通过在nemu/src/memory/paddr.c中定义的大数组pmem来模拟. 在客户程序运行的过程中, 总是使用vaddr_read()和vaddr_write() (在nemu/include/memory/vaddr.h中定义)来访问模拟的内存. vaddr, paddr分别代表虚拟地址和物理地址.")])])])}),[],!1,null,null,null);a.default=e.exports}}]);